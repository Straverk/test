import telebot
import sqlite3 as sl
from telebot import types
from telebot.types import InlineKeyboardMarkup, InlineKeyboardButton


bot = telebot.TeleBot('6193487447:AAGsq4ecSwe3A7Gesofb6kfXBxG7KVuZw6I')

msr_len = 0


def main_m(uid, s):
    markup = types.ReplyKeyboardMarkup(resize_keyboard=True, one_time_keyboard=True)
    btn1 = types.KeyboardButton('–°–æ–∑–¥–∞—Ç—å –∑–∞–º–µ—Ç–∫—Éüìã')
    btn2 = types.KeyboardButton('–†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞—Ç—å –∑–∞–º–µ—Ç–∫—É‚úè')
    markup.add(btn1, btn2)
    bot.send_message(uid, s, reply_markup=markup)


def create_n(uid, on, t):
    d = {1: "üò≠", 2: "üòû", 3: "üòê", 4: "üòÉ", 5: "üòÅ"}
    markup = InlineKeyboardMarkup()
    markup.add(InlineKeyboardButton(text='–û—Ç–º–µ–Ω–∏—Ç—å‚ùå', callback_data="close"))

    if on < 2:
        markup.add(InlineKeyboardButton(text=f"{on}/5:{d[on]}‚úÖ", callback_data=f"confirm{on}"),
                   InlineKeyboardButton(text='‚û°', callback_data=f"lr{on + 1}"))
    elif on > 4:
        markup.add(InlineKeyboardButton(text='‚¨Ö', callback_data=f"lr{on - 1}"),
                   InlineKeyboardButton(text=f"{on}/5:{d[on]}‚úÖ", callback_data=f"confirm{on}"))
    else:
        markup.add(InlineKeyboardButton(text='‚¨Ö', callback_data=f"lr{on - 1}"),
                   InlineKeyboardButton(text=f"{on}/5:{d[on]}‚úÖ", callback_data=f"confirm{on}"),
                   InlineKeyboardButton(text='‚û°', callback_data=f"lr{on + 1}"))

    s = "–ù–∞ —Å–∫–æ–ª—å–∫–æ –≤—ã –æ—Ü–µ–Ω–∏–≤–∞–µ—Ç–µ —Å–µ–≥–æ–¥–Ω—è—à–Ω–∏–π –¥–µ–Ω—åüìà\n–ù–µ –∑–∞–±—É–¥—å—Ç–µ –Ω–∞–ø–∏—Å–∞—Ç—å –∑–∞–º–µ—Ç–∫—É!"
    if t != -1:
        bot.edit_message_text(s, reply_markup=markup, chat_id=uid, message_id=t)
    else:
        bot.send_message(uid, s, reply_markup=markup)


@bot.message_handler(commands=['start'])
def start(message):
    try:
        s = "CREATE TABLE u" + str(message.from_user.id) + """(
                day INTEGER PRIMARY KEY AUTOINCREMENT,
                note TEXT DEFAULT '–ù–µ—Ç –∑–∞–º–µ—Ç–∫–∏',
                mood INTEGER
                editnow integers DEFAULT 0
            );"""
        sl.connect('mood.db').cursor().execute(s)
    except BaseException:
        main_m(message.from_user.id, "–ë–æ—Ç –±—ã–ª –ø–µ—Ä–µ–∑–∞–ø—É—â–µ–Ω, –∏ —Å–µ–π—á–∞—Å –æ–Ω –≥–æ—Ç–æ–≤ –∫ —Å–≤–æ–µ–π —Ä–∞–±–æ—Ç–µ –Ω–∞ –≤—Å–µ 100!")

    else:
        main_m(message.from_user.id, "–ü—Ä–∏–≤–µ—Çüëã –Ø –±–æ—Ç–∏–∫ –¥–ª—è –µ–∂–µ–¥–Ω–µ–≤–Ω—ã—Ö –∑–∞–ø–∏—Å–µ–π –Ω–∞—Å—Ç—Ä–æ–µ–Ω–∏—è, –ø—Ä–µ–¥–ª–∞–≥–∞—é –Ω–∞—á–∞—Ç—å —Å–æ–∑–¥–∞–Ω–∏–µ"
                                     " —Ç–≤–æ–µ–π –ø–µ—Ä–≤–æ–π –∑–∞–ø–∏—Å–∏!")
    bot.send_message(message.from_user.id, str(message.message_id.date))


@bot.callback_query_handler(func=lambda call: True)
def callback_query(call):
    req = call.data.split('_')
    if req[0] == 'close':
        main_m(call.message.chat.id, "–•–æ—Ä–æ—à–æ, —É–¥–∞–ª—è–µ–º –∑–∞–ø–∏—Å—åüëå")
        bot.delete_message(call.message.chat.id, call.message.message_id)

    elif 'lr' in req[0]:
        s = req[0]
        create_n(call.message.chat.id, int(s[2]), call.message.message_id)

    if 'confirm' in req[0]:
        pass
        # sl.connect('mood.db').cursor().execute(f"""
        #    INSERT INTO u{str(call.message.chat.id)} VALUES
        #        ('Monty Python and the Holy Grail', 1975, 8.2)
        # """)


@bot.message_handler(content_types=['text'])
def get_text_messages(message):
    if message.text == "–°–æ–∑–¥–∞—Ç—å –∑–∞–º–µ—Ç–∫—Éüìã":
        create_n(message.from_user.id, 3, -1)


bot.polling(none_stop=True, interval=0)  # –æ–±—è–∑–∞—Ç–µ–ª—å–Ω–∞—è –¥–ª—è —Ä–∞–±–æ—Ç—ã –±–æ—Ç–∞ —á–∞—Å—Ç—å
